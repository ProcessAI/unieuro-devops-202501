name: Deploy Client and Server Atacanet

on:
  push:
    branches:
      - main

jobs:
  lint-client:
    name: Lint Client
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.16.0'

      - name: Install client dependencies
        working-directory: ./client
        run: npm install

      - name: Run Linting for client
        working-directory: ./client
        run: npm run build

  lint-server:
    name: Lint Server
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.16.0'

      - name: Install server dependencies
        working-directory: ./server
        run: npm install

      - name: Run Linting for server
        working-directory: ./server
        run: npm run build

  deploy-client:
    name: Deploy Client
    runs-on: ubuntu-latest
    needs: [lint-client]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.16.0'

      - name: Install client dependencies
        working-directory: ./client
        run: npm install

      - name: Deploy client via SSH
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          script: |
            echo "Parando o NGINX..."
            sudo systemctl stop nginx
            echo "Limpando /var/www/client..."
            sudo rm -rf /var/www/client/*
            sudo mkdir -p /var/www/client

      - name: Copiar client via SCP
        uses: appleboy/scp-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          source: 'client/*'
          target: '/var/www/client'
          strip_components: 1

      - name: Reiniciar NGINX
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          script: |
            echo "Iniciando NGINX..."
            sudo systemctl start nginx

  deploy-server:
    name: Deploy Server
    runs-on: ubuntu-latest
    needs: [lint-server, deploy-client]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.16.0'

      - name: Install server dependencies
        working-directory: ./server
        run: npm install

      - name: Deploy server via SSH
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          script: |
            echo "Parando serviço do servidor..."
            sudo systemctl stop app
            echo "Limpando /var/www/server..."
            sudo rm -rf /var/www/server/*
            sudo mkdir -p /var/www/server

      - name: Copiar server via SCP
        uses: appleboy/scp-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          source: 'server/*'
          target: '/var/www/server'
          strip_components: 1

      - name: Reiniciar servidor backend
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          script: |
            echo "Iniciando serviço do servidor..."
            sudo systemctl start app
